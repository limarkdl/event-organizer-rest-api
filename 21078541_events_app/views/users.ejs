<%- include('templates/header') %>

<main class="container mx-auto px-4 py-6">
    <h2 class="text-2xl font-semibold mb-4">Manage Users</h2>

    <h3 class="text-xl font-medium mb-2">Get All Users</h3>
    <form id="getUsersForm" class="mb-6">
        <label for="eventId" class="block text-gray-700 mb-2">Filter by Event ID (optional):</label>
        <input type="number" id="eventId" name="eventId" class="border border-gray-300 p-2 rounded w-full mb-4">
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Get Users</button>
    </form>
    <div id="usersOutput" class="bg-gray-100 p-4 rounded shadow mb-6"></div>

    <h3 class="text-xl font-medium mb-2">Create User</h3>
    <form id="createUserForm" class="mb-6">
        <label for="username" class="block text-gray-700 mb-2">Username:</label>
        <input type="text" id="username" name="username" class="border border-gray-300 p-2 rounded w-full mb-4">

        <label for="firstname" class="block text-gray-700 mb-2">First Name:</label>
        <input type="text" id="firstname" name="firstname" class="border border-gray-300 p-2 rounded w-full mb-4">

        <label for="lastname" class="block text-gray-700 mb-2">Last Name:</label>
        <input type="text" id="lastname" name="lastname" class="border border-gray-300 p-2 rounded w-full mb-4">

        <button type="submit" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">Create User</button>
    </form>
    <div id="createUserOutput" class="bg-gray-100 p-4 rounded shadow mb-6"></div>

    <h3 class="text-xl font-medium mb-2">Delete User</h3>
    <form id="deleteUserForm" class="mb-6">
        <label for="userId" class="block text-gray-700 mb-2">User ID:</label>
        <input type="number" id="userId" name="userId" class="border border-gray-300 p-2 rounded w-full mb-4">
        <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">Delete User</button>
    </form>
    <div id="deleteUserOutput" class="bg-gray-100 p-4 rounded shadow mb-6"></div>
</main>

<script>
    const baseURL = '/api/user';

    document.getElementById('getUsersForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const eventId = document.getElementById('eventId').value;
        const url = eventId ? `${baseURL}?eventID=${eventId}` : baseURL;

        try {
            const response = await fetch(url);
            const data = await response.json();

            const outputDiv = document.getElementById('usersOutput');
            if (response.ok) {
                outputDiv.innerHTML = '<h4 class="text-lg font-semibold">Users:</h4>' +
                    '<ul class="list-disc pl-6">' +
                    data.map(user => `<li>ID: ${user.id}, Username: ${user.username}, Name: ${user.firstname} ${user.lastname}</li>`).join('') +
                    '</ul>';
            } else {
                outputDiv.innerHTML = `<p class="text-red-500">Error: ${data.message}</p>`;
            }
        } catch (error) {
            console.error('Error fetching users:', error);
        }
    });

    document.getElementById('createUserForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const username = document.getElementById('username').value;
        const firstname = document.getElementById('firstname').value;
        const lastname = document.getElementById('lastname').value;

        try {
            const response = await fetch(`${baseURL}/create`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, firstname, lastname })
            });

            const data = await response.json();

            const outputDiv = document.getElementById('createUserOutput');
            if (response.ok) {
                outputDiv.innerHTML = `<p class="text-green-500">${data.message}</p>`;
            } else {
                outputDiv.innerHTML = `<p class="text-red-500">Error: ${data.errors || data.message}</p>`;
            }
        } catch (error) {
            console.error('Error creating user:', error);
        }
    });

    document.getElementById('deleteUserForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const userId = document.getElementById('userId').value;

        try {
            const response = await fetch(`${baseURL}/delete?id=${userId}`, {
                method: 'DELETE'
            });

            const data = await response.json();

            const outputDiv = document.getElementById('deleteUserOutput');
            if (response.ok) {
                outputDiv.innerHTML = `<p class="text-green-500">User deleted successfully.</p>`;
            } else {
                outputDiv.innerHTML = `<p class="text-red-500">Error: ${data.message}</p>`;
            }
        } catch (error) {
            console.error('Error deleting user:', error);
        }
    });
</script>
